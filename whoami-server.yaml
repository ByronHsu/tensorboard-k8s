# https://kubernetes.io/docs/concepts/workloads/pods/
apiVersion: v1
kind: Pod
metadata:
  name: myapp
  labels:
    app: myapp
spec:
  containers:
  - name: myapp
    image: traefik/whoami
    resources:
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 200Mi
    ports:
    - containerPort: 80
      name: http
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: myapp
spec:
  selector:
    app: myapp
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 80
---
# # https://kubernetes.io/docs/concepts/services-networking/ingress/
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: whoami
#   annotations:
#     kubernetes.io/ingress.class: traefik
#     traefik.ingress.kubernetes.io/rewrite-target: /boo

# spec:
#   rules:
#   - http:
#       paths:
#       - path: /foo
#         backend:
#           serviceName: myapp
#           servicePort: http
# ---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: whoami
spec:
  entryPoints:                      # [1]
    - web
  routes:                           # [2]
  - kind: Rule
    match: PathPrefix(`/foo`) # [3]
    middlewares:                    # [5]
    - name: rewrite-target-middleware          # [6]
      namespace: default            # [7]
    services:                       # [8]
    - kind: Service
      name: myapp
      namespace: default
      port: 8080
---
# Replace path with regex
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: rewrite-target-middleware
spec:
  replacePathRegex:
    regex: ^(.*)
    replacement: /